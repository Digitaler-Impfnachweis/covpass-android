buildscript {
    ext.kotlin_version = '1.4.32'
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.14.2'
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.10.1'
        classpath 'pl.allegro.tech.build:axion-release-plugin:1.12.1'
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath 'com.jaredsburrows:gradle-license-plugin:0.8.90'
        classpath 'com.github.jruby-gradle:jruby-gradle-plugin:1.6.0'
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.38.0"
}

apply plugin: 'pl.allegro.tech.build.axion-release'

ext.JRubyExec = { -> com.github.jrubygradle.JRubyExec }

apply from: "$rootDir/gradle/common/repos.gradle"
setupRepos()
apply from: "$rootDir/gradle/common/dependency-updates.gradle"

apply from: "$rootDir/gradle/common/scm-version.gradle"
setupScmVersion()
group = 'com.ibm.health.vaccination'
subprojects {
    group = rootProject.group
    version = rootProject.version

    def isLibraryProject = project.name != 'app' && !project.name.startsWith('app-')
    def isAndroidProject = project.file('src/main/AndroidManifest.xml').exists()
    def isPlatformProject = project.name.endsWith('-bom')
    def isTestProject = project.name.endsWith('-test') || project.name == 'test'

    apply from: "$rootDir/dependencies.gradle"

    if (!isPlatformProject) {
        if (!isLibraryProject) {
            apply from: "$rootDir/gradle/common/android-app.gradle"
            androidApp(minVersion: 23, obfuscation: Obfuscation.None, disableAndroidLints: ["UnusedResources"])
            apply plugin: 'com.jaredsburrows.license'

            licenseReport {
                generateCsvReport = false
                generateHtmlReport = true
                generateJsonReport = false
            }
        } else if (isAndroidProject) {
            apply from: "$rootDir/gradle/common/android-library.gradle"
            androidLibrary(minVersion: 23)
        } else {
            apply from: "$rootDir/gradle/common/kotlin-library.gradle"
            kotlinLibrary()
        }

        apply from: "$rootDir/gradle/common/ktlint.gradle"
        apply from: "$rootDir/gradle/common/detekt.gradle"

        if (isAndroidProject) {
            android {
                if (!isLibraryProject) {
                    def codeName = project.name.substring("app-".length()).replaceAll("-", "")
                    defaultConfig {
                        applicationId "${group}.app.${codeName.replace("demo", "")}"
                    }

                    applicationVariants.all { variant ->
                        variant.outputs.all {
                            outputFileName = "$codeName-${defaultConfig.versionName}-${variant.buildType.name}.apk"
                        }
                    }
                }

                defaultConfig {
                    vectorDrawables.useSupportLibrary = true
                }

                buildFeatures {
                    viewBinding true
                }

                // Resolve build conflicts for test modules
                if (isTestProject) {
                    packagingOptions {
                        pickFirst 'META-INF/AL2.0'
                        pickFirst 'META-INF/LGPL2.1'
                    }

                    lintOptions {
                        abortOnError false
                    }
                }
            }

            dependencies {
                baseAndroid()
                if (isTestProject) {
                    androidTestLib()
                }
            }
        } else {
            dependencies {
                base()
                if (isTestProject) {
                    baseTestLib()
                }
            }
        }

        task verifyAll(group: 'verification') {
            dependsOn 'ktlint'
            dependsOn 'detekt'
            if (isAndroidProject) {
                dependsOn 'lintDebug'
                dependsOn 'testDebugUnitTest'
            } else {
                dependsOn 'test'
            }
        }

        if (isLibraryProject) {
            apply from: "$rootDir/gradle/common/coverage.gradle"
            trackCoverage(enableTestCoverage: isOnCI, trackUI: false)
        }
    }

    // TODO: SDK modules
//    if (isLibraryProject && !project.name.startsWith("common-app")) {
//        apply from: "$rootDir/gradle/common/publish.gradle"
//        def url = TODO
//        publish(
//            url: url,
//            username: username,
//            password: password,
//            isPlatformProject: isPlatformProject,
//        )
//    }

    // TODO: Production release builds
//    if (!isLibraryProject && project.name.startsWith("app-") && project.name.endsWith("-prod")) {
//        apply plugin: 'maven-publish'
//        afterEvaluate {
//            publishing {
//                publications {
//                    release(MavenPublication) {
//                        from components.release_apk
//                    }
//                }
//                repositories {
//                    maven {
//                        url "https://nexus.epa-dev.net/repository/epa-mobile-apps/"
//                        credentials {
//                            username repoConfig.nexusUsername
//                            password repoConfig.nexusPassword
//                        }
//                    }
//                }
//            }
//        }
//    }
}
