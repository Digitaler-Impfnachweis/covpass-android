/*
 * (C) Copyright IBM Deutschland GmbH 2021
 * (C) Copyright IBM Corp. 2021
 */

package de.rki.covpass.checkapp.revocation

import androidx.annotation.StringRes
import com.ibm.health.common.android.utils.getString
import de.rki.covpass.checkapp.R

public object CovPassCheckCountryResolver {

    private val countryList: Map<String, CovPassCheckCountry> = listOf(
        CovPassCheckCountry(
            R.string.IT,
            "IT",
        ),
        CovPassCheckCountry(
            R.string.LT,
            "LT",
        ),
        CovPassCheckCountry(
            R.string.DK,
            "DK",
        ),
        CovPassCheckCountry(
            R.string.GR,
            "GR",
        ),
        CovPassCheckCountry(
            R.string.CZ,
            "CZ",
        ),
        CovPassCheckCountry(
            R.string.HR,
            "HR",
        ),
        CovPassCheckCountry(
            R.string.IS,
            "IS",
        ),
        CovPassCheckCountry(
            R.string.PT,
            "PT",
        ),
        CovPassCheckCountry(
            R.string.PL,
            "PL",
        ),
        CovPassCheckCountry(
            R.string.BE,
            "BE",
        ),
        CovPassCheckCountry(
            R.string.BG,
            "BG",
        ),
        CovPassCheckCountry(
            R.string.DE,
            "DE",
        ),
        CovPassCheckCountry(
            R.string.LU,
            "LU",
        ),
        CovPassCheckCountry(
            R.string.EE,
            "EE",
        ),
        CovPassCheckCountry(
            R.string.CY,
            "CY",
        ),
        CovPassCheckCountry(
            R.string.ES,
            "ES",
        ),
        CovPassCheckCountry(
            R.string.NL,
            "NL",
        ),
        CovPassCheckCountry(
            R.string.AT,
            "AT",
        ),
        CovPassCheckCountry(
            R.string.LV,
            "LV",
        ),
        CovPassCheckCountry(
            R.string.LI,
            "LI",
        ),
        CovPassCheckCountry(
            R.string.FI,
            "FI",
        ),
        CovPassCheckCountry(
            R.string.SE,
            "SE",
        ),
        CovPassCheckCountry(
            R.string.SI,
            "SI",
        ),
        CovPassCheckCountry(
            R.string.RO,
            "RO",
        ),
        CovPassCheckCountry(
            R.string.NO,
            "NO",
        ),
        CovPassCheckCountry(
            R.string.SK,
            "SK",
        ),
        CovPassCheckCountry(
            R.string.FR,
            "FR",
        ),
        CovPassCheckCountry(
            R.string.MT,
            "MT",
        ),
        CovPassCheckCountry(
            R.string.HU,
            "HU",
        ),
        CovPassCheckCountry(
            R.string.IE,
            "IE",
        ),
        CovPassCheckCountry(
            R.string.CH,
            "CH",
        ),
        CovPassCheckCountry(
            R.string.UA,
            "UA",
        ),
        CovPassCheckCountry(
            R.string.VA,
            "VA",
        ),
        CovPassCheckCountry(
            R.string.SM,
            "SM",
        ),
        CovPassCheckCountry(
            R.string.TR,
            "TR",
        ),
        CovPassCheckCountry(
            R.string.MK,
            "MK",
        ),
        CovPassCheckCountry(
            R.string.AD,
            "AD",
        ),
        CovPassCheckCountry(
            R.string.MC,
            "MC",
        ),
        CovPassCheckCountry(
            R.string.FO,
            "FO",
        ),
        CovPassCheckCountry(
            R.string.MA,
            "MA",
        ),
        CovPassCheckCountry(
            R.string.AL,
            "AL",
        ),
        CovPassCheckCountry(
            R.string.IL,
            "IL",
        ),
        CovPassCheckCountry(
            R.string.PA,
            "PA",
        ),
        CovPassCheckCountry(
            R.string.TG,
            "TG",
        ),
        CovPassCheckCountry(
            R.string.SG,
            "SG",
        ),
        CovPassCheckCountry(
            R.string.GB,
            "GB",
        ),
        CovPassCheckCountry(
            R.string.AM,
            "AM",
        ),
        CovPassCheckCountry(
            R.string.GE,
            "GE",
        ),
        CovPassCheckCountry(
            R.string.NZ,
            "NZ",
        ),
        CovPassCheckCountry(
            R.string.DZ,
            "DZ",
        ),
        CovPassCheckCountry(
            R.string.AZ,
            "AZ",
        ),
        CovPassCheckCountry(
            R.string.BH,
            "BH",
        ),
        CovPassCheckCountry(
            R.string.BJ,
            "BJ",
        ),
        CovPassCheckCountry(
            R.string.BA,
            "BA",
        ),
        CovPassCheckCountry(
            R.string.BR,
            "BR",
        ),
        CovPassCheckCountry(
            R.string.BI,
            "BI",
        ),
        CovPassCheckCountry(
            R.string.CV,
            "CV",
        ),
        CovPassCheckCountry(
            R.string.CA,
            "CA",
        ),
        CovPassCheckCountry(
            R.string.CL,
            "CL",
        ),
        CovPassCheckCountry(
            R.string.CO,
            "CO",
        ),
        CovPassCheckCountry(
            R.string.DO,
            "DO",
        ),
        CovPassCheckCountry(
            R.string.SV,
            "SV",
        ),
        CovPassCheckCountry(
            R.string.EG,
            "EG",
        ),
        CovPassCheckCountry(
            R.string.HK,
            "HK",
        ),
        CovPassCheckCountry(
            R.string.JP,
            "JP",
        ),
        CovPassCheckCountry(
            R.string.JO,
            "JO",
        ),
        CovPassCheckCountry(
            R.string.KZ,
            "KZ",
        ),
        CovPassCheckCountry(
            R.string.KE,
            "KE",
        ),
        CovPassCheckCountry(
            R.string.KR,
            "KR",
        ),
        CovPassCheckCountry(
            R.string.XK,
            "XK",
        ),
        CovPassCheckCountry(
            R.string.KW,
            "KW",
        ),
        CovPassCheckCountry(
            R.string.LB,
            "LB",
        ),
        CovPassCheckCountry(
            R.string.MY,
            "MY",
        ),
        CovPassCheckCountry(
            R.string.MN,
            "MN",
        ),
        CovPassCheckCountry(
            R.string.ME,
            "ME",
        ),
        CovPassCheckCountry(
            R.string.MD,
            "MD",
        ),
        CovPassCheckCountry(
            R.string.RU,
            "RU",
        ),
        CovPassCheckCountry(
            R.string.RW,
            "RW",
        ),
        CovPassCheckCountry(
            R.string.RS,
            "RS",
        ),
        CovPassCheckCountry(
            R.string.SD,
            "SD",
        ),
        CovPassCheckCountry(
            R.string.TW,
            "TW",
        ),
        CovPassCheckCountry(
            R.string.TZ,
            "TZ",
        ),
        CovPassCheckCountry(
            R.string.TH,
            "TH",
        ),
        CovPassCheckCountry(
            R.string.TN,
            "TN",
        ),
        CovPassCheckCountry(
            R.string.AE,
            "AE",
        ),
        CovPassCheckCountry(
            R.string.UG,
            "UG",
        ),
        CovPassCheckCountry(
            R.string.US,
            "US",
        ),
        CovPassCheckCountry(
            R.string.UY,
            "UY",
        ),
        CovPassCheckCountry(
            R.string.VN,
            "VN",
        ),
        CovPassCheckCountry(
            R.string.AR,
            "AR",
        ),
        CovPassCheckCountry(
            R.string.MX,
            "MX",
        )
    ).associateBy { it.countryCode.uppercase() }

    private fun getCountryByCode(countryCode: String): CovPassCheckCountry? = countryList[countryCode]

    public fun getCountryLocalized(countryCode: String): String =
        getCountryByCode(countryCode.uppercase())?.let {
            getString(it.nameRes)
        } ?: countryCode
}

public data class CovPassCheckCountry(
    @StringRes val nameRes: Int,
    val countryCode: String,
)
