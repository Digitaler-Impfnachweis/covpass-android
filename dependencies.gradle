// ------------------------------------------------------------------------------------------------
// Expose correct dependency version constraints, so our dependents can
// leave out the version number and automatically get the correct version.
// Critical versions are associated with security requirements (e.g. gematik)
// and have to be used with enforcedPlatform().
// ------------------------------------------------------------------------------------------------
dependencies.ext.versionConstraints = {
    dependencies {
        api platform("org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.4.3")
        api platform("io.ktor:ktor-bom:1.5.3")
        api platform("com.ensody.reactivestate:dependency-versions-bom:3.5.0")
        api platform("com.squareup.okhttp3:okhttp-bom:4.9.1")

        constraints {
            // The versions definition for constraints are only taken into account if they are brought
            // in as transitive dependencies. Otherwise, the constraint has no effect.

            // While kotlin-stdlib and kotlin-stdlib-common are automatically set by the gradle plugin,
            // a few older dependencies still want kotlin-stdlib-jdk7 or kotlin-reflect based on a different Kotlin
            // version. Make everything consistent and prevent compilation warnings.
            api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
            api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
            api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

            def kotlinxSerializationVersion = "1.1.0"
            api "org.jetbrains.kotlinx:kotlinx-serialization-core:$kotlinxSerializationVersion"
            api "org.jetbrains.kotlinx:kotlinx-serialization-cbor:$kotlinxSerializationVersion"

            api 'org.conscrypt:conscrypt-android:2.5.2'

            def bouncyCastleVersion = "1.68"
            api "org.bouncycastle:bcprov-jdk15to18:$bouncyCastleVersion"
            api "org.bouncycastle:bcprov-jdk15on:$bouncyCastleVersion"
            api "org.bouncycastle:bcmail-jdk15to18:$bouncyCastleVersion"
            api "org.bouncycastle:bcmail-jdk15on:$bouncyCastleVersion"
            api "org.bouncycastle:bcpkix-jdk15to18:$bouncyCastleVersion"
            api "org.bouncycastle:bcpkix-jdk15on:$bouncyCastleVersion"

            api "com.augustcellars.cose:cose-java:1.1.0"

            api 'androidx.appcompat:appcompat:1.2.0'
            api 'androidx.core:core-ktx:1.3.2'
            api 'androidx.constraintlayout:constraintlayout:2.0.4'

            def fragmentVersion = "1.3.2"
            api "androidx.fragment:fragment-ktx:$fragmentVersion"
            api "androidx.fragment:fragment-testing:$fragmentVersion"

            api 'androidx.annotation:annotation:1.1.0'

            def lifecycleVersion = '2.3.0'
            api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
            api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
            api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
            api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"
            api "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
            api "androidx.lifecycle:lifecycle-service:$lifecycleVersion"
            api "androidx.lifecycle:lifecycle-process:$lifecycleVersion"

            api 'com.jakewharton.timber:timber:4.7.1'

            // testing constraints
            api 'androidx.arch.core:core-testing:2.1.0'

            def androidxTestCore = "1.3.0"
            api "androidx.test:core:$androidxTestCore"
            api "androidx.test:core-ktx:$androidxTestCore"
            api "androidx.test:runner:$androidxTestCore"
            api "androidx.test:rules:$androidxTestCore"

            api 'androidx.test.ext:junit:1.1.2'
            api 'androidx.test.ext:junit-ktx:1.1.2'
            api "com.willowtreeapps.assertk:assertk-jvm:0.22"
            api "io.mockk:mockk:1.10.6"
            api 'junit:junit:4.13.1'
            api 'org.robolectric:robolectric:4.5.1'
            api 'org.opentest4j:opentest4j:1.2.0'

            api 'com.google.android.material:material:1.2.1'
        }
    }
}
// ------------------------------------------------------------------------------------------------

dependencies.ext.testDependency = { dependency ->
    dependencies {
        if (project.name.endsWith("-test")) {
            api dependency
        } else {
            testImplementation dependency
        }
    }
}

dependencies.ext.base = {
    dependencies {
        api platform(project(':dependency-versions-bom'))

        testImplementation 'junit:junit'

        // Workaround for assertk-related IntelliJ bug: https://youtrack.jetbrains.com/issue/IDEA-214533
        testImplementation 'org.opentest4j:opentest4j'
        testImplementation 'com.willowtreeapps.assertk:assertk-jvm'

        testImplementation "io.mockk:mockk"
    }
}

dependencies.ext.baseTestLib = {
    dependencies {
        api 'junit:junit'
        api 'org.jetbrains.kotlinx:kotlinx-coroutines-test'
    }
}

dependencies.ext.baseAndroid = {
    dependencies {
        base()
        api 'androidx.annotation:annotation'
        api 'com.google.android.material:material'

        testImplementation 'androidx.arch.core:core-testing'
        testImplementation('org.robolectric:robolectric') {
            exclude group: 'org.bouncycastle'
        }
        testImplementation "org.bouncycastle:bcprov-jdk15to18"
        testImplementation "org.bouncycastle:bcpkix-jdk15to18"
    }
}

dependencies.ext.reactiveState = {
    dependencies {
        api 'com.ensody.reactivestate:core'
        api 'com.ensody.reactivestate:reactivestate'
        testDependency 'com.ensody.reactivestate:core-test'
    }
}

dependencies.ext.androidTestLib = {
    dependencies {
        baseTestLib()
        api 'androidx.fragment:fragment-testing'
        api 'androidx.test:core'
        api 'androidx.test:core-ktx'
        api 'androidx.test:runner'
        api 'androidx.test:rules'
        api 'androidx.test.ext:junit'
        api 'androidx.test.ext:junit-ktx'
    }
}

dependencies.ext.androidUI = {
    dependencies {
        baseAndroid()
        coroutines()

        api 'androidx.appcompat:appcompat'
        api 'androidx.core:core-ktx'
        api 'androidx.fragment:fragment-ktx'
        api 'androidx.lifecycle:lifecycle-livedata-ktx'
        api 'androidx.lifecycle:lifecycle-runtime-ktx'
        api 'androidx.lifecycle:lifecycle-viewmodel-ktx'
        api 'androidx.lifecycle:lifecycle-viewmodel-savedstate'
        api 'androidx.constraintlayout:constraintlayout'
        api 'com.airbnb.android:lottie:3.4.1'

        if (project.name != 'android-utils-test') {
            testImplementation project(':android-utils-test')
        }
    }
}

dependencies.ext.conscrypt = {
    dependencies {
        api 'org.conscrypt:conscrypt-android'
    }
}

dependencies.ext.coroutines = {
    dependencies {
        api 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
        testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test'
    }
}

dependencies.ext.timber = {
    dependencies {
        implementation 'com.jakewharton.timber:timber'
    }
}

dependencies.ext.ktor = {
    dependencies {
        coroutines()

        api 'io.ktor:ktor-client-core'
        api 'io.ktor:ktor-client-android'
        api 'io.ktor:ktor-client-json-jvm'
        api 'io.ktor:ktor-client-okhttp'

        kotlinxSerialization()
        api 'io.ktor:ktor-client-serialization'

        api 'com.squareup.okhttp3:okhttp'
        api 'com.squareup.okhttp3:logging-interceptor'

        testImplementation 'io.ktor:ktor-client-mock-jvm'
    }
}

dependencies.ext.coseJava = {
    dependencies {
        api("com.augustcellars.cose:cose-java") {
            exclude group: 'org.bouncycastle'
        }
        bouncyCastle()
    }
}

dependencies.ext.bouncyCastle = {
    dependencies {
        api "org.bouncycastle:bcprov-jdk15to18"
        api "org.bouncycastle:bcpkix-jdk15to18"
    }
}

dependencies.ext.zxing = {
    dependencies {
        api 'com.journeyapps:zxing-android-embedded:4.2.0'
        api 'com.google.zxing:core:3.4.1'
    }
}

dependencies.ext.cryptographic = {
    dependencies {
        api 'androidx.security:security-crypto:1.1.0-alpha03'
    }
}

dependencies.ext.kotlinxSerialization = {
    dependencies {
        api 'org.jetbrains.kotlinx:kotlinx-serialization-core'
        api 'org.jetbrains.kotlinx:kotlinx-serialization-cbor'
    }
}
