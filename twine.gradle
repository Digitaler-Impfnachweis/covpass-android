apply plugin: 'com.github.jruby-gradle.base'

configurations.create("twine")

def inputFileCert = "${project.rootDir}/text-vaccination/twine-cert.txt"
def inputFileValidator = "${project.rootDir}/text-vaccination/twine-validator.txt"
def inputFileCommon = "${project.rootDir}/text-vaccination/twine-common.txt"
def outputFile = "${project.projectDir}/src/main/res/values/generated_strings.xml"


task generateStrings(dependsOn: ['generateVaccinationStrings', 'generateValidationStrings', 'generateCommonStrings'])

task generateVaccinationStrings(type: JRubyExec()) {
    inputs.file(inputFileCert)
    outputs.file(outputFile)
    dependsOn jrubyPrepare
    jrubyArgs '-S'
    script 'twine'
    scriptArgs 'generate-localization-file',
        inputFileCert,
            outputFile,
            '--format', 'android',
            '--lang', 'de'
    configuration 'twine'
}
generateVaccinationStrings.onlyIf { project.name == "app-vaccinee" }
generateVaccinationStrings.doLast {
    ant.replace(
            file: outputFile,
            token: '<resources>',
            value: '<resources xmlns:tools="http://schemas.android.com/tools" tools:ignore="UnusedResources">'
    )
}

task generateValidationStrings(type: JRubyExec()) {
    inputs.file(inputFileValidator)
    outputs.file(outputFile)
    dependsOn jrubyPrepare
    jrubyArgs '-S'
    script 'twine'
    scriptArgs 'generate-localization-file',
        inputFileValidator,
        outputFile,
        '--format', 'android',
        '--lang', 'de'
    configuration 'twine'
}
generateValidationStrings.onlyIf { project.name == "app-cert-checker" }
generateValidationStrings.doLast {
    ant.replace(
        file: outputFile,
        token: '<resources>',
        value: '<resources xmlns:tools="http://schemas.android.com/tools" tools:ignore="UnusedResources">'
    )
}

task generateCommonStrings(type: JRubyExec()) {
    inputs.file(inputFileCommon)
    outputs.file(outputFile)
    dependsOn jrubyPrepare
    jrubyArgs '-S'
    script 'twine'
    scriptArgs 'generate-localization-file',
        inputFileCommon,
        outputFile,
        '--format', 'android',
        '--lang', 'de'
    configuration 'twine'
}
generateCommonStrings.onlyIf { project.name == "common-app" }
generateCommonStrings.doLast {
    ant.replace(
        file: outputFile,
        token: '<resources>',
        value: '<resources xmlns:tools="http://schemas.android.com/tools" tools:ignore="UnusedResources">'
    )
}

dependencies {
    twine 'rubygems:twine:1.0.4'
}
