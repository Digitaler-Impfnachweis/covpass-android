enum RepoType {
    Epa,
    Ega,
    PhotoProcessing,
}
ext.RepoType = RepoType
ext {
    ibmConfig = new Properties()
    isOnCI = System.getenv("JENKINS_HOME") != null || System.getenv("RUNNING_CI") == "true"
    isSnapshot = version.endsWith('-SNAPSHOT') && isOnCI
    shouldPublishWithSources = { !isSnapshot && ibmConfig.getProperty('publishWithSources') == 'true' }
    shouldUseDebugRepos = { ibmConfig.getProperty('useDebugRepos') == 'true' }
    shouldUseEpaDebugRepos = { shouldUseDebugRepos() && ibmConfig.getProperty('useEpaDebugRepos') == 'true' }

    nexus = [
        egaPrivate      : "https://nexus.open-insurance-platform.com/repository/ibm-ega-releases/",
        egaPublic       : "https://nexus.open-insurance-platform.com/repository/ega-releases/",
        egaExternalDebug: "https://nexus.open-insurance-platform.com/repository/ega-external-modules-debug/",
        egaExternal     : "https://nexus.open-insurance-platform.com/repository/ega-external-modules/",
        egaSnapshots    : "https://nexus.open-insurance-platform.com/repository/ega-snapshots/",
        photoProcessing : "https://nexus.open-insurance-platform.com/repository/PhotoProcessingSDK/",
        epaPrivate      : "https://nexus.epa-dev.net/repository/ibm-epa-releases/",
        epaPublic       : "https://nexus.epa-dev.net/repository/external-epa-releases/",
    ]
}

ext.setupRepos = { Set<RepoType> repos = new HashSet(RepoType.values().toList()) ->
    subprojects {
        repositories {
            google()
            jcenter()
            flatDir {
                dirs '../libs'
            }
            if (repos.contains(RepoType.Ega)) {
                if (shouldUseDebugRepos()) {
                    maven {
                        url nexus.egaPrivate
                        credentials {
                            username ibmConfig.nexusUsername
                            password ibmConfig.nexusPassword
                        }
                    }
                }
                maven {
                    url nexus.egaPublic
                    credentials {
                        username ibmConfig.nexusUsername
                        password ibmConfig.nexusPassword
                    }
                }
                maven {
                    url nexus.egaSnapshots
                    credentials {
                        username ibmConfig.nexusUsername
                        password ibmConfig.nexusPassword
                    }
                }
            }
            if (repos.contains(RepoType.Ega)) {
                maven {
                    url nexus.photoProcessing
                    credentials {
                        username ibmConfig.nexusUsername
                        password ibmConfig.nexusPassword
                    }
                }
            }
            if (repos.contains(RepoType.Epa)) {
                if (shouldUseEpaDebugRepos()) {
                    maven {
                        url nexus.epaPrivate
                        credentials {
                            username ibmConfig.nexusUsername
                            password ibmConfig.nexusPassword
                        }
                    }
                }
                maven {
                    url nexus.epaPublic
                    credentials {
                        username ibmConfig.nexusUsername
                        password ibmConfig.nexusPassword
                    }
                }
            }
            if (repos.contains(RepoType.Ega)) {
                if (shouldUseDebugRepos()) {
                    maven {
                        url nexus.egaExternalDebug
                        credentials {
                            username ibmConfig.nexusUsername
                            password ibmConfig.nexusPassword
                        }
                    }
                }
                maven {
                    url nexus.egaExternal
                    credentials {
                        username ibmConfig.nexusUsername
                        password ibmConfig.nexusPassword
                    }
                }
            }
            maven { url 'https://jitpack.io' }
            mavenLocal()  // since we need this so often, let's just keep it as the last fallback
        }
    }
}

// Set defaults (also see below)
ibmConfig.setProperty('publishWithSources', 'false')
ibmConfig.setProperty('useDebugRepos', (!isOnCI).toString())

// Copy settings from global gradle properties if they exist
for (key in ["nexusUsername", "nexusPassword", "publishWithSources", "useDebugRepos", "useEpaDebugRepos"]) {
    if (hasProperty(key) && !ibmConfig.hasProperty(key)) {
        ibmConfig.setProperty(key, getProperty(key))
    }
}

// Load local config
def _propertiesFile = file("$rootDir/../ibmconfig.properties")
if (_propertiesFile.exists()) {
    _propertiesFile.withInputStream { ext.ibmConfig.load(it) }
}

// Allow overriding via environment variables
if (System.env.PUBLISH_SOURCES in ['true', 'false']) {
    ibmConfig.setProperty('publishWithSources', System.env.PUBLISH_SOURCES)
}
if (System.env.USE_DEBUG_REPOS in ['true', 'false']) {
    ibmConfig.setProperty('useDebugRepos', System.env.USE_DEBUG_REPOS)
}

// Set defaults based on other defaults
if (!ibmConfig.hasProperty('useEpaDebugRepos')) {
    ibmConfig.setProperty('useEpaDebugRepos', ibmConfig.getProperty('useDebugRepos'))
}
